from openfisca_core.model_api import *
from openfisca_core.periods import MONTH, YEAR
from openfisca_core.variables import Variable
from openfisca_france_firms.entities import UniteLegale, Etablissement  # noqa F401


class achats_marchandises(Variable):
    cerfa_field = "FS"
    value_type = int
    unit = 'currency'
    entity = UniteLegale
    label = "Achats de marchandises (y compris droits de douane)"
    definition_period = YEAR


class variations_stocks_marchandises(Variable):
    cerfa_field = "FT"
    value_type = int
    unit = 'currency'
    entity = UniteLegale
    label = "Variations de stocks (marchandises)"
    definition_period = YEAR


class achats_matieres_premieres(Variable):
    cerfa_field = "FU"
    value_type = int
    unit = 'currency'
    entity = UniteLegale
    label = "Achats de matières premières et autres approvisionnements (y compris droits de douane)"
    definition_period = YEAR


class variations_stocks_mp(Variable):
    cerfa_field = "FV"
    value_type = int
    unit = 'currency'
    entity = UniteLegale
    label = "Variations de stocks (matières premières et approvisionnements)"
    definition_period = YEAR


class autres_achats(Variable):
    cerfa_field = "FW"
    value_type = int
    unit = 'currency'
    entity = UniteLegale
    label = "Autres achats et charges externes"
    definition_period = YEAR


class impots_taxes(Variable):
    cerfa_field = "FX"
    value_type = int
    unit = 'currency'
    entity = UniteLegale
    label = "Impôts, taxes et versements assimilés"
    definition_period = YEAR


class salaires_traitements(Variable):
    cerfa_field = "FY"
    value_type = int
    unit = 'currency'
    entity = UniteLegale
    label = "Salaires et traitements"
    definition_period = YEAR


class charges_sociales(Variable):
    cerfa_field = "FZ"
    value_type = int
    unit = 'currency'
    entity = UniteLegale
    label = "Charges sociales"
    definition_period = YEAR


class dotations_immobilisations_amortissements(Variable):
    cerfa_field = "GA"
    value_type = int
    unit = 'currency'
    entity = UniteLegale
    label = "Dotations sur immobilisations : aux amortissements"
    definition_period = YEAR


class dotations_immobilisations_provisions(Variable):
    cerfa_field = "GB"
    value_type = int
    unit = 'currency'
    entity = UniteLegale
    label = "Dotations sur immobilisations : aux provisions"
    definition_period = YEAR


class dotations_immobilisations(Variable):
    value_type = int
    unit = 'currency'
    entity = UniteLegale
    label = "Dotations d'exploitation sur immobilisations"
    definition_period = YEAR

    def formula(UniteLegale, period):
        amortissements = UniteLegale("dotations_immobilisations_amortissements", period)
        provisions = UniteLegale("dotations_immobilisations_provisions", period)

        dotations = amortissements + provisions

        return dotations


class dotations_actif_circulant(Variable):
    cerfa_field = "GC"
    value_type = int
    unit = 'currency'
    entity = UniteLegale
    label = "Dotations sur actif circulant : dotations aux provisions"
    definition_period = YEAR


class dotations_risques_charges(Variable):
    cerfa_field = "GD"
    value_type = int
    unit = 'currency'
    entity = UniteLegale
    label = "Dotations pour risques et charges : dotations aux provisions"
    definition_period = YEAR


class dotations_exploitation(Variable):
    value_type = int
    unit = 'currency'
    entity = UniteLegale
    label = "Dotations d'exploitation"
    definition_period = YEAR

    def formula(UniteLegale, period):
        immobilisations = UniteLegale("dotations_immobilisations", period)
        actif_circulant = UniteLegale("dotations_actif_circulant", period)
        risques_charges = UniteLegale("dotations_risques_charges", period)

        dotations = (immobilisations + actif_circulant + risques_charges)

        return dotations


class autres_charges(Variable):
    cerfa_field = "GE"
    value_type = int
    unit = 'currency'
    entity = UniteLegale
    label = "Autres charges"
    definition_period = YEAR


class charges_exploitation(Variable):
    value_type = int
    unit = 'currency'
    entity = UniteLegale
    label = "Charges d'exploitation"
    definition_period = YEAR

    def formula(UniteLegale, period):
        achats_marchandises = UniteLegale("achats_marchandises", period)
        variations_stocks_marchandises = UniteLegale("variations_stocks_marchandises", period)
        achats_matieres_premieres = UniteLegale("achats_matieres_premieres", period)
        variations_stocks_mp = UniteLegale("variations_stocks_mp", period)
        autres_achats = UniteLegale("autres_achats", period)
        impots_taxes = UniteLegale("impots_taxes", period)
        salaires_traitements = UniteLegale("salaires_traitements", period)
        charges_sociales = UniteLegale("charges_sociales", period)
        dotations_exploitation = UniteLegale("dotations_exploitation", period)
        autres_charges = UniteLegale("autres_charges", period)

        charges = (achats_marchandises + variations_stocks_marchandises + achats_matieres_premieres + variations_stocks_mp + autres_achats + impots_taxes + salaires_traitements + charges_sociales + dotations_exploitation + autres_charges)

        return charges
